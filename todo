crashes if first for statement is not decl
for(*id* = thing ...)

static members in structs/classes

constant global arrays (int[] i = [1,2,3,4])

delete, etc should accept qualified identifiers (eg .blocks)
array 'new' should accept variable length. eg (int[] arr = new int[5 * i])

set member class types and arrays to zero

error if member lookup fails (eg .x, but x not in this)

//cannot call function on returned struct eg (getStruct().doStuff()) where the prototype is "MyStruct GetStruct()"

'myclass = Class()' expression is still a bit silly

new Class() sometimes does not work if Class is declared after use

null all class-typed members before constructor

do not overwrite local tuple constants
eg:
    myTup = [0,0,0]
    printf("%d\n", myTup[0])
    myTup[0] = 1
second pass through function will print '1' instead of expected '0'
