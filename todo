static members in structs/classes

array 'new' should only manually calculate array size if size expression is not static (eg calc for new int[i+5])

set member class types and arrays to zero

null all class-typed members before constructor

? recursive types (types that contain references to each other) crash things

rearange class members largest to smallest (for packing efficiency)

import(C), correctly parse 'typedef'

warn of invalid use of local if function member

functions accept extra parameters (which are then ignored)

"new MyClass().func()" parses incorrectly (new should bind harder than '.')
MyClass().func() does not work (seems to be same as above)

"[int, int]^ tup; tup++" breaks things (eg, passing tuple by reference)

unions do not take into account class lifetime
