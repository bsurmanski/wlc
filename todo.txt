error if return is not there
error if using compound assign op, and resolving binary types changes LHS
## allow for duplicate return
## error if import file does not exist
error if param is type not yet defined
check param order, type, and number
## dont error if semicolon is in struct def
hexadecimal, octal, binary number parsing
dont crash on 'f' postfix of numbers
## convert null to appropriate type in return
## allow implicit conversion from pointer to bool
## sizeof operator
offsetof operator
## globals without init should default to 0
## correct struct debug info
proper arrays
negate operator
## proper extern keyword for variables
## compound equal operators (and dont segfault on compound equal)
++ operator for float
float coersion is off. an expression like (rand() / float: RAND_MAX) 
    does not parse right (should be random 0.0-1.0, instead is 0.0)
right shift operator
## float point, integer promotion in vararg functions

make a 'type' expression?
make an 'operator' expression so that operators can have properties?
TypeInfo->getSize(), ASTType->size(). change one or other to make sense
TypeInfo->getReferenceTy(), ASTType->getReferencedTy(). change on or other to make sense
static arrays might now actually allocate on the stack properly
make a 'create dynamic array' function, for use in casting and 'new' expressions
