#ifndef TOK
#define TOK(X)
#endif

#ifndef PUNCTUATOR
#define PUNCTUATOR(X,Y) TOK(X)
#endif

#ifndef KEYWORD
#define KEYWORD(X) TOK(kw_ ## X)
#endif

//basic type
#ifndef BTYPE
#define BTYPE(X,SZ,SIGN) KEYWORD(X)
#endif

//floating point
#ifndef FTYPE
#define FTYPE(X,SZ) KEYWORD(X)
#endif

//vector types
#ifndef VTYPE
#define VTYPE(X,LEN,TYPE) KEYWORD(X)
#endif

#ifndef RESERVE
#define RESERVE(X) TOK(resv_ ## X)
#endif

//matrix types?

TOK(none)
TOK(eof)
TOK(unknown)
TOK(comment)
TOK(identifier)
TOK(floatNum)
TOK(intNum)
TOK(charstring)
TOK(character)

BTYPE(bool,1,false)
BTYPE(char,1,false)
BTYPE(short,2,false)
BTYPE(int,4,false)
BTYPE(long,8,false)
FTYPE(float,4)
FTYPE(double,8)

VTYPE(vec4,4,float)

KEYWORD(const)
KEYWORD(extern)
KEYWORD(enum)
KEYWORD(for)
KEYWORD(goto)
KEYWORD(if)
KEYWORD(else)
KEYWORD(return)
KEYWORD(struct)
KEYWORD(static)
KEYWORD(union)
KEYWORD(void)
KEYWORD(true)
KEYWORD(false)
KEYWORD(and)
KEYWORD(or)
KEYWORD(while)
KEYWORD(switch)
KEYWORD(pass)
KEYWORD(import)

// reserved words. hopefully will get around to implementing these
RESERVE(asm) /* inline asm */
RESERVE(once) /* declare that statement only happens once, ever. when first encountered  */
RESERVE(var) /* statically checked automatic type variable var myvar = new MyStruct() */
RESERVE(package) /* declare package like Java, (package com.mysite.mypackage) */
RESERVE(number) /* for variable precission numbers */
RESERVE(let) /* like D alias, and for constants (let a = 7) */
RESERVE(implicit) /* for implicit conversions, apply to function */
RESERVE(this)
RESERVE(super)

PUNCTUATOR(plus, "+")
PUNCTUATOR(plusplus, "++")
PUNCTUATOR(minus, "-")
PUNCTUATOR(minusminus, "--")
PUNCTUATOR(star, "*")
PUNCTUATOR(starstar, "**")
PUNCTUATOR(slash, "/")
PUNCTUATOR(amp, "&")
PUNCTUATOR(ampamp, "&&")
PUNCTUATOR(bar, "|")
PUNCTUATOR(barbar, "||")
PUNCTUATOR(caret, "^")
PUNCTUATOR(percent, "%")
PUNCTUATOR(bang, "!")
PUNCTUATOR(tilde, "~")
PUNCTUATOR(slashslash, "//")
PUNCTUATOR(equal, "=")
PUNCTUATOR(equalequal, "==")
PUNCTUATOR(less, "<")
PUNCTUATOR(lessless, "<<")
PUNCTUATOR(lessequal, "<=")
PUNCTUATOR(greater, ">")
PUNCTUATOR(greaterequal, ">=")
PUNCTUATOR(greatergreater, ">>")
PUNCTUATOR(lparen, "(")
PUNCTUATOR(rparen, ")")
PUNCTUATOR(lbrace, "{")
PUNCTUATOR(rbrace, "}")
PUNCTUATOR(lbracket, "[")
PUNCTUATOR(rbracket, "]")
PUNCTUATOR(comma, ",")
PUNCTUATOR(semicolon, ";")
PUNCTUATOR(colon, ":")
PUNCTUATOR(dot, ".")
PUNCTUATOR(dotdot, "..")
PUNCTUATOR(dotdotdot, "...")


#undef TOK
#undef PUNCTUATOR
#undef KEYWORD
#undef RESERVE
#undef BTYPE
#undef VTYPE
#undef FTYPE
